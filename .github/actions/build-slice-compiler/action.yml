name: "Build Slice Compiler"
description: "Builds a Slice compiler from C++ source for multiple platforms"

inputs:
  compiler-name:
    description: "Name of the compiler to build"
    required: true

runs:
  using: "composite"
  steps:
    - name: Build on Windows
      if: runner.os == 'Windows'
      run: |
        nuget restore cpp/msbuild/ice.sln
        MSBuild /m cpp/msbuild/ice.sln /p:Configuration=Release /p:Platform=x64 /t:${{ inputs.compiler-name }}
      shell: cmd

    - name: Build on Linux/macOS
      if: runner.os != 'Windows'
      run: |
        make -C cpp OPTIMIZE=yes V=1 ${{ inputs.compiler-name }}
      shell: bash

    - name: Sign Compiler Artifact
      if: runner.os == 'Windows'
      uses: azure/trusted-signing-action@v0
      with:
        azure-tenant-id: ${{ env.AZURE_TENANT_ID }}
        azure-client-id: ${{ env.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ env.AZURE_CLIENT_SECRET }}
        endpoint: https://eus.codesigning.azure.net/
        trusted-signing-account-name: zeroc
        certificate-profile-name: zeroc-ice
        files: ${{ github.workspace }}\cpp\bin\x64\Release\${{ inputs.compiler-name }}.exe
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256
