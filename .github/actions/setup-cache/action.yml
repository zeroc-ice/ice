name: Setup Cache

inputs:
  prefix:
    description: "Cache key prefix"
    type: string
    required: true

runs:
  using: "composite"
  steps:
    #
    # Cache
    #

    - name: Get Linux version
      if: runner.os == 'Linux'
      id: linux-version
      run: echo "version=$(lsb_release -rs)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get macOS version
      if: runner.os == 'macOS'
      id: macos-version
      run: echo "version=$(sw_vers -productVersion)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get Windows version
      if: runner.os == 'Windows'
      id: windows-version
      run: |
        echo "version=$((Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion').DisplayVersion)" >> $env:GITHUB_OUTPUT
      shell: powershell

    - name: Set OS version output
      id: os-version
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo "version=${{ steps.linux-version.outputs.version }}" >> $GITHUB_OUTPUT
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo "version=${{ steps.macos-version.outputs.version }}" >> $GITHUB_OUTPUT
        elif [ "$RUNNER_OS" == "Windows" ]; then
          echo "version=${{ steps.windows-version.outputs.version }}" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: false
        append-timestamp: false
        key: ${{ inputs.prefix }}-${{ runner.os }}-${{ steps.os-version.outputs.version }}-${{ runner.arch }}-${{ github.sha }}
        restore-keys: |
          ${{ inputs.prefix }}-${{ runner.os }}-${{ steps.os-version.outputs.version }}-${{ runner.arch }}
        max-size: 1G
        evict-old-files: job
        variant: ${{ runner.os == 'Windows' && 'ccache' || 'ccache' }}

    - name: Configure ccache path
      if: runner.os == 'macOS' || runner.os == 'Linux'
      shell: bash
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        echo "/opt/homebrew/opt/ccache/libexec" >> $GITHUB_PATH

    # See https://github.com/ccache/ccache/wiki/MS-Visual-Studio
    # The same instructions apply to sccache
    - name: Setup ccache
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        # Find ccache in path and copy it to cl.exe
        $ccache = Get-Command ccache.exe -ErrorAction Stop
        if ($ccache -eq $null) {
          Write-Host "ccache not found in PATH"
          exit 1
        }

        # Copy $ccache to C:\cl.exe
        Copy-Item $ccache.Path C:\cl.exe

        # Set required environment variables for ccache to work with MSVC
        echo "USING_BUILD_CACHE=true" >> $env:GITHUB_ENV
        echo "CLToolExe=C:\cl.exe" >> $env:GITHUB_ENV
        echo "CLToolPath=C:\" >> $env:GITHUB_ENV
