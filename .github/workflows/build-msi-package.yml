name: "Build MSI Package"

on:
  workflow_call:
    inputs:
      ice_version:
        required: false
        type: string
      source_url:
        required: false
        type: string
      repository_url:
        required: false
        type: string
      repository_username:
        required: false
        type: string
    secrets:
      REPOSITORY_PASSWORD:
        required: false

  workflow_dispatch:
    inputs:
      ice_version:
        description: "The Ice version to use"
        required: false
      source_url:
        description: "The URL of the NuGet repository to download from"
        required: false
        type: string
      repository_url:
        description: "The URL of the repository to publish to"
        required: false
        type: string
      repository_username:
        description: "The username to authenticate with the repository"
        required: false
        type: string

jobs:
  build-msi-package:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ice

      - name: Setup Dependencies
        uses: ./ice/.github/actions/setup-dependencies

      - name: Download C++ Binaries From NuGet feed
        run: |
          New-Item -ItemType Directory -Path "${{ github.workspace }}\packages"
          nuget install ZeroC.Ice.Cpp -Source ${{ inputs.source_url }} -Version ${{ inputs.ice_version }} -OutputDirectory "${{ github.workspace }}\packages" -Prerelease -ExcludeVersion

      - name: Build IceGrid GUI
        run: |
          nuget restore ..\cpp\msbuild\ice.sln
          MSBuild ..\cpp\msbuild\ice.sln /t:"slice2java;ice2slice" /p:Configuration=Release /p:Platform=x64
          ./gradlew.bat dist -PcppPlatform=x64 -PcppConfiguration=Release
        working-directory: ice/java

      - name: Build MSI
        run: dotnet build -c Release -p:Platform=x64
        working-directory: ice/packaging/msi
        env:
          PackageDir: "${{ github.workspace }}\\packages\\ZeroC.Ice.Cpp"
          StagingDir: "${{ github.workspace }}\\staging"
          # TODO compute this variable see issue #3558
          VCInstallDir: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC"

      - name: Publish MSI
        shell: bash
        run: |
          curl -u "${REPOSITORY_USERNAME}:${REPOSITORY_PASSWORD}" \
             --upload-file ice/packaging/msi/bin/x64/Release/*.msi \
             --output /dev/null \
             --silent \
             --fail \
             --show-error \
             ${{ inputs.repository_url }}/ || { echo "Upload failed"; exit 1; }
        if: inputs.repository_url != ''
        env:
          REPOSITORY_USERNAME: ${{ inputs.repository_username }}
          REPOSITORY_PASSWORD: ${{ secrets.REPOSITORY_PASSWORD }}

      - name: Upload MSI
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: |
            ice/packaging/msi/bin/x64/Release/*.msi
