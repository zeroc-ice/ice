name: "Publish RPM Packages"

on:
  workflow_dispatch:
    inputs:
      channel:
        description: "The channel to publish to (e.g., 3.8, nightly)"
        required: true
      run_id:
        description: "The run ID to use for downloading artifacts"
        required: true
  workflow_call:
    inputs:
      channel:
        required: true
        type: string
      run_id:
        required: true
        type: string

jobs:
  build:
    name: "Publish DEB Packages for ${{ matrix.distribution }}"
    runs-on: 'ubuntu-24.04'
    strategy:
      matrix:
        include:
          - distribution: debian12
          - distribution: ubuntu-24.04
    env:
      DISTRIBUTION: ${{ matrix.distribution }}
      CHANNEL: ${{ inputs.channel }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
            path: ice

      - name: Download DEB artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ inputs.run_id }}
        run: |
          set -euo pipefail
          mkdir -p staging
          gh run download "$RUN_ID" --repo zeroc-ice/ice --pattern "deb-packages-${DISTRIBUTION}-*" --dir staging

      - name: Create DEB repository
        run: |
          set -euo pipefail

          echo "Syncing current repository from S3..."
          mkdir -p "${DISTRIBUTION}"
          aws s3 sync "s3://zeroc-downloads/ice/${CHANNEL}/${DISTRIBUTION}" "${DISTRIBUTION}"

          echo "Creating/updating repository with new DEB packages..."
          docker_args=(
            --rm
            -v "$GITHUB_WORKSPACE:/workspace"
            -e GPG_KEY="${GPG_KEY}"
            -e GPG_KEY_ID="${GPG_KEY_ID}"
            ghcr.io/zeroc-ice/deb-repo-builder
          )
          docker run "${docker_args[@]}" /workspace/ice/packaging/deb/create-deb-repo.sh \
            --staging /workspace/staging/
            --repository "${DISTRIBUTION}"
            --distribution "${DISTRIBUTION}" \
            --channel "${CHANNEL}"

          echo "Uploading updated repository to S3..."
          aws s3 sync "${DISTRIBUTION}" "s3://zeroc-downloads/ice/${CHANNEL}/${DISTRIBUTION}" --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GPG_KEY: ${{ secrets.ICE_3_8_CI_SIGNER_KEY }}
          GPG_KEY_ID: ${{ secrets.ICE_3_8_CI_SIGNER_KEY_ID }}
