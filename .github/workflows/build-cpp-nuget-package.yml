name: "Build C++ Nuget Package"

on:
  workflow_call:
    inputs:
      ice_version:
        required: false
        type: string
      source_url:
        required: false
        type: string
    secrets:
      NUGET_API_KEY:
        required: false
  workflow_dispatch:
    inputs:
      ice_version:
        description: "The Ice version to build"
        required: false
      source_url:
        description: "The URL of the NuGet repository to publish to"
        required: false
        type: string

jobs:
  build-cpp-nuget-package:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Build C++ NuGet Packages
        run: msbuild /m ice.proj /t:Pack /p:BuildAllConfigurations=yes /p:IcePackageVersion="${{ inputs.ice_version }}"
        working-directory: cpp/msbuild

      - name: Upload NuGet Packages
        uses: actions/upload-artifact@v4
        with:
          name: windows-cpp-nuget-packages
          path: |
            cpp/msbuild/ZeroC.Ice.Cpp/*.nupkg

      - name: Publish NuGet Packages
        run: |
          $packages = @(
              Get-ChildItem -Path cpp\msbuild\ZeroC.Ice.Cpp -Filter "*.nupkg" -File -Recurse
              Get-ChildItem -Path cpp\msbuild\ZeroC.Ice.Cpp -Filter "*.snupkg" -File -Recurse
          )

          foreach ($package in $packages) {
              Write-Host "Publishing package: $($package.FullName)"
              nuget push $package.FullName -Source ${{ inputs.source_url }} -ApiKey ${{ secrets.NUGET_API_KEY }}
              if ($LASTEXITCODE -ne 0) { throw "nuget push failed" }
          }
        if: inputs.source_url != ''
