name: "Build PIP Packages"

on:
  workflow_call:
    inputs:
      ice_version:
        required: false
        type: string
      repository_url:
        required: false
        type: string
    secrets:
      PYPI_USERNAME:
        required: false
      PYPI_PASSWORD:
        required: false
  workflow_dispatch:
    inputs:
      ice_version:
        description: "The Ice version to build"
        required: false
      repository_url:
        description: "The URL of the PYPI registry to publish to"
        required: false
        type: string

jobs:
  build-python-packages:
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Install Build Dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install build
          python3 -m pip install toml

      - name: Update PYPI Version
        run: python3 packaging/pypi/update_version.py ${{ inputs.ice_version }} python/pyproject.toml
        if: inputs.ice_version != ''

      - name: Build PIP Package
        working-directory: python
        run: python3 -m build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pip-packages-${{ matrix.os }}
          path: |
            python/dist/zeroc_ice-*.whl
            python/dist/zeroc_ice-*.tar.gz

  publish-python-packages:
    runs-on: ubuntu-latest
    needs: build-python-packages

    steps:
      - name: Download All Compiler Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish PIP Package
        run: |
          mkdir -p ${{ github.workspace }}/dist
          cp -r artifacts/pip-packages-windows-latest/*.whl ${{ github.workspace }}/dist
          cp -r artifacts/pip-packages-macos-latest/*.whl ${{ github.workspace }}/dist
          cp -r artifacts/pip-packages-macos-latest/*.tar.gz ${{ github.workspace }}/dist

          python3 -m pip install twine --user
          python3 -m twine upload --repository-url ${{ inputs.repository_url }} python/dist/zeroc-ice-*.whl python/dist/zeroc-ice-*.tar.gz
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        if: inputs.repository_url != ''
