name: Build Nightly Release

on:
  workflow_call:
    inputs:
      build_number:
        required: false
        default: "1"
        type: string
      repository_url:
        required: false
        default: "https://download.zeroc.com/nexus/repository"
        type: string
      repository_username:
        required: false
        default: "nightly"
        type: string
  workflow_dispatch:
    inputs:
      build_number:
        description: "Build number for nightly releases"
        required: false
        default: "1"
      repository_url:
        description: "URL of the repository to publish to"
        required: false
        default: "https://download.zeroc.com/nexus/repository"
      repository_username:
        description: "The username to authenticate with the repository"
        required: false
        default: "nightly"

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      semver_version: ${{ steps.set-vars.outputs.semver_version }}
      deb_version: ${{ steps.set-vars.outputs.deb_version }}
      gem_version: ${{ steps.set-vars.outputs.gem_version }}
      maven_version: ${{ steps.set-vars.outputs.maven_version }}
      pypi_version: ${{ steps.set-vars.outputs.pypi_version }}
      rpm_version: ${{ steps.set-vars.outputs.rpm_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version variables
        id: set-vars
        run: |
          DATE=$(date +%Y%m%d)
          BUILD=${{ inputs.build_number }}
          VERSION=3.8.0

          # Set version variables for nightly packages according to the platform conventions:
          # - Semver : 3.8.0-nightly.<YYYYMMDD>.<BUILD>
          echo "semver_version=${VERSION}-nightly.${DATE}.${BUILD}" >> $GITHUB_OUTPUT
          # - DEB: 3.8.0-0.nightly<YYYYMMDD>.<BUILD>
          echo "deb_version=${VERSION}-0.nightly${DATE}.${BUILD}" >> $GITHUB_OUTPUT
          # - GEM: 3.8.0.pre.<YYYYMMDD>.<BUILD>
          echo "gem_version=${VERSION}.pre.${DATE}.${BUILD}" >> $GITHUB_OUTPUT
          # - MAVEN: 3.8.0-nightly-<YYYYMMDD>.<BUILD>-SNAPSHOT
          echo "maven_version=${VERSION}-nightly-${DATE}.${BUILD}-SNAPSHOT" >> $GITHUB_OUTPUT
          # - PyPI: 3.8.0.dev<YYYYMMDD><BUILD>
          echo "pypi_version=${VERSION}.dev${DATE}${BUILD}" >> $GITHUB_OUTPUT
          # - RPM: 3.8.0~0.nightly<YYYYMMDD>.<BUILD>
          echo "rpm_version=${VERSION}~0.nightly${DATE}.${BUILD}" >> $GITHUB_OUTPUT

      - name: Create latest.json
        run: |
          echo "{
            \"semver_version\": \"${{ steps.set-vars.outputs.semver_version }}\",
            \"deb_version\": \"${{ steps.set-vars.outputs.deb_version }}\",
            \"gem_version\": \"${{ steps.set-vars.outputs.gem_version }}\",
            \"maven_version\": \"${{ steps.set-vars.outputs.maven_version }}\",
            \"pypi_version\": \"${{ steps.set-vars.outputs.pypi_version }}\",
            \"rpm_version\": \"${{ steps.set-vars.outputs.rpm_version }}\"
          }" > latest.json
        shell: bash

      - name: Upload latest.json to nightly repository
        uses: ./.github/actions/upload-nightly
        with:
          upload_file: latest.json
          repository_url: ${{ inputs.repository_url }}
        env:
          REPOSITORY_USERNAME: ${{ inputs.repository_username }}
          REPOSITORY_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  create-brew-tap:
    name: Create Brew Tap
    uses: ./.github/workflows/create-brew-tap.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.semver_version }}
      repository_url: ${{ inputs.repository_url }}
      repository_username: ${{ inputs.repository_username }}
    secrets:
      REPOSITORY_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-cpp-nuget-package:
    name: Build C++ NuGet Package
    uses: ./.github/workflows/build-cpp-nuget-package.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.semver_version }}
      source_url: "${{ inputs.repository_url }}/nuget-nightly/"
    secrets:
      NUGET_API_KEY: ${{ secrets.NEXUS_NIGHTLY_NUGET_API_KEY }}

  build-deb-packages:
    name: Build DEB Packages
    uses: ./.github/workflows/build-deb-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.deb_version }}
      deb_build_options: "nocheck parallel=4"
      repository_url: ${{ inputs.repository_url }}
      repository_suffix: "-nightly"
      repository_username: ${{ inputs.repository_username }}
    secrets:
      REPOSITORY_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-dotnet-packages:
    name: Build .NET Packages
    uses: ./.github/workflows/build-dotnet-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.semver_version }}
      source_url: "${{ inputs.repository_url }}/nuget-nightly/"
    secrets:
      NUGET_API_KEY: ${{ secrets.NEXUS_NIGHTLY_NUGET_API_KEY }}

  build-gem-packages:
    name: Build GEM Packages
    uses: ./.github/workflows/build-gem-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.gem_version }}
      repository_url: "${{ inputs.repository_url }}/rubygems-nightly/gems/"
      repository_username: ${{ inputs.repository_username }}
    secrets:
      REPOSITORY_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-matlab-packages:
    name: Build MATLAB Packages
    uses: ./.github/workflows/build-matlab-packages.yml

  build-maven-packages:
    name: Build Maven Packages
    uses: ./.github/workflows/build-maven-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.maven_version }}
      repository_url: "${{ inputs.repository_url }}/maven-nightly/"
      repository_username: ${{ inputs.repository_username }}
    secrets:
      MAVEN_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-msi-package:
    name: Build MSI Package
    uses: ./.github/workflows/build-msi-package.yml
    needs: [set-version, build-cpp-nuget-package]
    with:
      ice_version: ${{ needs.set-version.outputs.semver_version }}
      source_url: "${{ inputs.repository_url }}/nuget-nightly/"
      repository_url: "${{ inputs.repository_url }}/nightly/"
      repository_username: ${{ inputs.repository_username }}
    secrets:
      REPOSITORY_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-npm-packages:
    name: Build NPM Packages
    uses: ./.github/workflows/build-npm-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.semver_version }}
      registry_url: "${{ inputs.repository_url }}/npm-nightly/"
    secrets:
      NPM_AUTH_TOKEN: ${{ secrets.NEXUS_NIGHTLY_NPM_AUTH_TOKEN }}

  build-pip-packages:
    name: Build PIP Packages
    uses: ./.github/workflows/build-pip-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.pypi_version }}
      repository_url: "${{ inputs.repository_url }}/pypi-nightly/"
      repository_username: ${{ inputs.repository_username }}
    secrets:
      PYPI_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-rpm-packages:
    name: Build RPM Packages
    uses: ./.github/workflows/build-rpm-packages.yml
    needs: set-version
    with:
      ice_version: ${{ needs.set-version.outputs.rpm_version }}
      repository_url: ${{ inputs.repository_url }}
      repository_suffix: "-nightly"
      repository_username: ${{ inputs.repository_username }}
    secrets:
      REPOSITORY_PASSWORD: ${{ secrets.NEXUS_NIGHTLY_PASSWORD }}

  build-xcframework-packages:
    name: Build XCFramework Packages
    uses: ./.github/workflows/build-xcframework-packages.yml
