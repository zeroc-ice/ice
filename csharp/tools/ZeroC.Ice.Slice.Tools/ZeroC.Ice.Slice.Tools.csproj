<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <Import Project="..\..\..\config\ice.version.props" />
    <PropertyGroup>
      <TargetFramework>netstandard2.0</TargetFramework>
      <Nullable>enable</Nullable>
      <LangVersion>10.0</LangVersion>

      <!-- Packaging properties -->

      <!-- The version for the NuGet package. -->
      <!-- Defaults to IcePackageVersion, which is set in ice.version.props imported above. -->
      <PackageVersion>$(IcePackageVersion)</PackageVersion>
      <Description>Provides tools to generate C# code from Slice definitions; includes support for MSBuild projects.</Description>
      <DevelopmentDependency>true</DevelopmentDependency>
      <PackageType>Dependency</PackageType>
      <IncludeBuildOutput>false</IncludeBuildOutput>
      <!-- Suppress NU5100 warning for the package. -->
      <!-- The assembly 'tasks\ZeroC.Ice.Slice.Tools.dll' is not inside the 'lib' folder -->
      <!-- We do that on purpose we don't want projects to reference it, is only for MSBuild to load the tasks. -->
      <NoWarn>NU5100</NoWarn>
      <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
      <PackageTags>Ice;RPC;MSBuild;Slice</PackageTags>
      <PackageReadmeFile>README.md</PackageReadmeFile>

      <!-- Signing properties -->
      <TimeStampServer Condition="'$(SIGN_TIMESTAMPSERVER)' == ''">http://timestamp.digicert.com</TimeStampServer>
      <SignCommandSHA1 Condition="Exists('$(SIGN_CERTIFICATE)')">signtool sign /f "$(SIGN_CERTIFICATE)" /p $(SIGN_PASSWORD) /t $(TimeStampServer)</SignCommandSHA1>
      <SignCommandSHA256 Condition="Exists('$(SIGN_CERTIFICATE)')">signtool sign /f "$(SIGN_CERTIFICATE)" /p $(SIGN_PASSWORD) /tr $(TimeStampServer) /td sha256 /fd sha256 /as</SignCommandSHA256>

      <!-- Internal properties used to compute the slice2cs compiler location for the current platform. -->
      <IceOSName Condition="$([MSBuild]::IsOSPlatform('Linux'))">linux</IceOSName>
      <IceOSName Condition="$([MSBuild]::IsOSPlatform('Windows'))">windows</IceOSName>
      <IceOSName Condition="$([MSBuild]::IsOSPlatform('OSX'))">macos</IceOSName>
      <IceOSArch>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLower())</IceOSArch>
    </PropertyGroup>

    <ItemGroup>
      <Content Include="ProjectItemsSchema.xaml" Pack="true" PackagePath="build/" />
      <Content Include="SliceCompile.CSharp.File.xaml" Pack="true" PackagePath="build/" />
      <Content Include="SliceCompile.CSharp.xaml" Pack="true" PackagePath="build/" />
      <Content Include="ZeroC.Ice.Slice.Tools.props" Pack="true" PackagePath="build/" />
      <Content Include="ZeroC.Ice.Slice.Tools.targets" Pack="true" PackagePath="build/" />
      <None Include="$(OutputPath)/$(AssemblyName).dll" Pack="true" PackagePath="tasks/" Visible="false" />
      <Content Include="README.md" Pack="true" PackagePath="/" />
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="Microsoft.Build.Framework" Version="15.5.180" />
      <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.5.180" />
    </ItemGroup>

    <Target Name="Sign" AfterTargets="CopyFilesToOutputDirectory" Condition="Exists('$(SIGN_CERTIFICATE)')">
        <Exec Command="$(SignCommandSHA1) $(OutputPath)$(AssemblyName).dll" />
        <Exec Command="$(SignCommandSHA256) $(OutputPath)$(AssemblyName).dll" />
    </Target>

    <!-- Slice for C# compilers -->
    <Choose>
      <When Condition="Exists('$(SLICE2CS_STAGING_PATH)')">
        <!-- Use the pre-built compilers from SLICE2CS_STAGING_PATH. -->
        <ItemGroup>
            <Content Include="$(SLICE2CS_STAGING_PATH)/linux-x64/slice2cs">
              <PackagePath>tools/linux-x64/</PackagePath>
              <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICE2CS_STAGING_PATH)/linux-arm64/slice2cs">
              <PackagePath>tools/linux-arm64/</PackagePath>
              <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICE2CS_STAGING_PATH)/macos-arm64/slice2cs">
              <PackagePath>tools/macos-arm64/</PackagePath>
              <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICE2CS_STAGING_PATH)/windows-x64/slice2cs.exe">
              <PackagePath>tools/windows-x64/</PackagePath>
              <Pack>true</Pack>
            </Content>
        </ItemGroup>
      </When>
      <When Condition="'$(IceOSName)' == 'windows'">
        <!-- Use the compilers from this source build. -->
        <ItemGroup>
          <Content Include="$(MSBuildThisFileDirectory)..\..\..\cpp\bin\x64\$(Configuration)\slice2cs.exe">
            <Pack>true</Pack>
            <PackagePath>tools\$(IceOSName)-$(IceOSArch)</PackagePath>
          </Content>
        </ItemGroup>
      </When>
      <Otherwise>
        <ItemGroup>
          <!-- Use the compilers from this source build. -->
          <Content Include="$(MSBuildThisFileDirectory)..\..\..\cpp\bin\slice2cs">
            <Pack>true</Pack>
            <PackagePath>tools\$(IceOSName)-$(IceOSArch)</PackagePath>
          </Content>
        </ItemGroup>
      </Otherwise>
    </Choose>
</Project>
