# Copyright (c) ZeroC, Inc.

# Gets the library path for a platform (macosx does not have a platform directory)
# $(call xcframework-library,Ice,macosx) => lib/Ice/libIce.a
# $(call xcframework-library,Ice,iphoneos) => lib/iphoneos/libIce.a
xcframework-library = lib/$(if $(filter macosx,$2),,$2/)lib$1.a

# Gets a list of library paths for a component for all platforms
xcframework-libraries = $(foreach p,$($1_platforms),$(call xcframework-library,$1,$p))

# Gets a list of component flags used when generating an xcframework. One set of flags per platform.
xcframework-flags     = $(foreach p,$($1_platforms),-library $(call xcframework-library,$1,$p) $(if $2,-headers include/$1))

# Creates a xcframework from a static component and its headers
# Note: The headers are copied into the root of the Headers directory. We move the headers into Header/$1 so that we can
# include Ice as <Ice/Ice.h>. We also copy the generated headers into the Headers/$1 directory.
#
# $(call create-xcframework,$1=framework-name)
define create-xcframework

lib/XCFrameworks/$1.xcframework: $(call xcframework-libraries,$1)
	$(E) Creating lib/XCFrameworks/$1.xcframework from $(call xcframework-libraries,$1)
	$(Q)$(RM) -r lib/XCFrameworks/$1.xcframework
	$(Q)if [ -d include/$1 ]; then \
		xcodebuild -create-xcframework $(call xcframework-flags,$1,true) -output lib/XCFrameworks/$1.xcframework ; \
		find lib/XCFrameworks/$1.xcframework -name Headers -prune -exec mv {} {}_$1 \; -exec mkdir {} \; -exec mv {}_$1 {}/$1 \; ; \
		if [ -d include/generated/$1 ]; then \
			find lib/XCFrameworks/$1.xcframework -name Headers -prune -exec cp -r include/generated/$1/* {}/$1 \; ; \
		fi \
	else \
		xcodebuild -create-xcframework $(call xcframework-flags,$1) -output lib/XCFrameworks/$1.xcframework; \
	fi

srcs all:: lib/XCFrameworks/$1.xcframework

install:: $(DESTDIR)$(prefix)/lib/XCFrameworks/$1.xcframework

$(DESTDIR)$(prefix)/lib/XCFrameworks/$1.xcframework: lib/XCFrameworks/$1.xcframework
	$(E) Installing lib/XCFrameworks/$1.xcframework to $(DESTDIR)$(prefix)/lib/XCFrameworks
	$(Q)$(MKDIR) -p $(DESTDIR)$(prefix)/lib/XCFrameworks
	$(Q)cp -pR lib/XCFrameworks/$1.xcframework $(DESTDIR)$(prefix)/lib/XCFrameworks

clean::
	$(E) Cleaning lib/XCFrameworks/$1.xcframework
	$(Q)$(RM) -r lib/XCFrameworks/$1.xcframework
endef

ifeq ($(filter $(config),static),)
$(foreach f, $(xcframeworks), $(eval $f_always_enable_configs := static))
endif

define make-xcframeworks
$(foreach f, $(xcframeworks),\
    $(if $($f_platforms),$(eval $(call create-xcframework,$f))))
endef
